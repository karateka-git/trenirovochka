plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id("kotlin-parcelize")
    alias(libs.plugins.hilt)
    alias(libs.plugins.safeargs)
}

apply from: "$rootDir/versions.gradle"

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.trenirovochka"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"


        // TODO сохраняет схему базы данных, нужно для миграции, разообраться что да как
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation "androidx.core:core-ktx:${libs.versions.kotlin.get()}"
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation "androidx.activity:activity-ktx:${versions.activity}"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle}"

    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${versions.lifecycle}"

    // Hilt
    implementation "com.google.dagger:hilt-android:${libs.versions.hilt.get()}"
    kapt "com.google.dagger:hilt-compiler:${libs.versions.hilt.get()}"

    // Navigation
    implementation("androidx.navigation:navigation-fragment-ktx:${libs.versions.navigation.get()}")
    implementation("androidx.navigation:navigation-ui-ktx:${libs.versions.navigation.get()}")

    //Input Mask
    implementation("com.github.RedMadRobot:input-mask-android:${libs.versions.inputMask.get()}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib:${libs.versions.kotlin.get()}")

    // Room
    implementation "androidx.room:room-ktx:${libs.versions.room.get()}"
    kapt "androidx.room:room-compiler:${libs.versions.room.get()}"

    // Gson
    implementation "com.google.code.gson:gson:${libs.versions.gson.get()}"

    // Test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}